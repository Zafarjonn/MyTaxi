import uz.zafarbek.mytaxi.buildsrc.Libs
import uz.zafarbek.mytaxi.buildsrc.Constants

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'

}

android {
    compileSdk Constants.Build.compileSdk

    defaultConfig {
        minSdk Constants.App.minSdk
        targetSdk Constants.App.targetSdk
        versionCode Constants.App.versionCode
        versionName Constants.App.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        Properties properties = new Properties()
        if (project.rootProject.file('local.properties').canRead())
            properties.load(new FileInputStream(project.rootProject.file('local.properties')))
        else throw new GradleException("Could not read local.properties!")

        debug {
            buildConfigField("String", "BASE_URL", properties["BASE_URL"])
            buildConfigField("String", "MAP_KEY", properties["MAP_KEY"])
        }
        release {
            buildConfigField("String", "BASE_URL", properties["BASE_URL"])
            buildConfigField("String", "MAP_KEY", properties["MAP_KEY"])

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = Constants.Build.jvmTarget
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {
    implementation(Libs.Kotlin.stdlib)
    implementation(Libs.AndroidX.fragment)
    implementation(Libs.Material.material)
    implementation(Libs.Navigation.common)
    implementation(Libs.Navigation.navigation_fragment)
    implementation(Libs.AndroidX.window)
    implementation(Libs.Hilt.hilt)
    kapt(Libs.Hilt.hiltKapt)
    implementation(Libs.Kotlin.reflect)
    implementation(Libs.Lifecycle.lifecycle)
    implementation(Libs.Shimmer.shimmer)
    implementation(Libs.Toasty.toasty)
    implementation(Libs.Binding.dataBinding)
    implementation(Libs.Binding.viewBindingDelegate)
    implementation(Libs.Paging.paging)
    implementation(Libs.Glide.glide)
    kapt(Libs.Glide.kapt)

    implementation(Libs.Lottie.lottie)

}